{"version":3,"sources":["global/Translate.ts","Context/index.ts","global/themes.ts","components/ModalWindow/index.tsx","reducer/actionTypes.ts","services/Services.ts","reducer/initialState.ts","reducer/index.ts","global/fonts/Lato/Lato-Light.ttf","global/fonts/Lato/Lato-Regular.ttf","global/fonts/Lato/Lato-Bold.ttf","global/fonts/GlobalFonts.ts","components/SideBar/styled.ts","components/SideBar/index.tsx","reducer/action.ts","components/Error/index.tsx","components/Loader/index.tsx","components/ProjectsListItem/styled.ts","components/ProjectsListItem/index.tsx","components/pages/ProjectsListPage/styled.ts","components/pages/ProjectsListPage/index.tsx","components/pages/AboutPage/styled.ts","components/pages/AboutPage/index.tsx","components/pages/ContactsPage/styled.ts","components/pages/ContactsPage/index.tsx","components/pages/ProjectPage/styled.ts","components/pages/ProjectPage/index.tsx","components/pages/ServicesPage/styled.ts","components/pages/ServicesPage/index.tsx","components/Main/styled.ts","components/Main/index.tsx","global/GlobalStyle.ts","components/App/styled.ts","components/App/index.tsx","components/ErrorBoundary/index.tsx","index.tsx"],"names":["Translate","en","Projects","About","Services","Contacts","AboutDescription","modalTitle","modalDescription","modalClose","ua","Context","React","createContext","themes","light","backgroundColor","textColor","backgroundModalColor","dark","ModalWindow","useState","modalIsOpen","setIsOpen","state","useContext","isModalOpen","theme","language","width","useScrollbarSize","useEffect","Modal","setAppElement","closeModal","customStyles","content","top","left","right","bottom","marginRight","transform","overlay","zIndex","isOpen","onAfterOpen","document","body","style","overflowY","paddingRight","onAfterClose","onRequestClose","href","target","onClick","LOADING","ERROR","SET_LANGUAGE","SET_THEME","OPEN_MODAL","Service","_apiDataBaseProjects","api","axios","create","baseURL","this","getAllProjects","get","initialState","loading","error","errorMessage","localStorage","getItem","reducer","action","type","payload","createGlobalStyle","LatoLight","LatoBold","LatoRegular","fontSize","S","WrapperMain","styled","div","Wrapper","NavigationMenu","nav","NavMenuLink","WrapperBottom","WrapperButtons","ButtonLanguage","LanguageCircle","props","LanguageTitle","ButtonTheme","ThemeCircle","ThemeTitle","NavigationSocial","Logo","h1","SideBar","dispatch","social","instagram","linkedin","telegram","behance","iconColor","iconStyle","height","to","setItem","setLanguage","setTheme","url","bgColor","Error","Loader","Title","span","ThumbNail","img","ProjectsListItem","project","thumbnail","projectName","id","src","alt","ProjectsListPage","dbProjects","length","map","AboutPage","ContactsPage","Name","DescriptionWrapper","ImageGalleryWrapper","Description","p","DrawWrapper","DrawImg","FullDraw","ProjectPage","item","description","drawings","items","showPlayButton","elem","key","ServicesPage","Main","service","setDbProject","location","useLocation","then","res","data","catch","TransitionGroup","className","CSSTransition","timeout","enter","exit","classNames","exact","path","component","render","match","params","App","useReducer","setTimeout","GlobalFonts","GlobalStyle","Provider","value","ErrorBoundary","setState","children","Component","ReactDOM","getElementById"],"mappings":"oTAkCeA,EAvBX,CACAC,GAAI,CACAC,SAAU,WACVC,MAAO,QACPC,SAAU,WACVC,SAAU,WACVC,iBAAkB,ibAClBC,WAAY,aACZC,iBAAkB,iLAClBC,WAAY,SAEhBC,GAAI,CACAR,SAAU,6CACVC,MAAO,8CACPC,SAAU,6CACVC,SAAU,mDACVC,iBAAkB,4sDAClBC,WAAY,gEACZC,iBAAkB,4yBAClBC,WAAY,+CCrBPE,EAAUC,IAAMC,cAAc,ICT9BC,EAMT,CACAC,MAAO,CACHC,gBAAiB,UACjBC,UAAW,QACXC,qBAAsB,SAE1BC,KAAM,CACFH,gBAAiB,UACjBC,UAAW,QACXC,qBAAsB,U,wBCLjBE,EAAwB,WAEjC,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAoBC,EAApB,KACOC,EAASC,qBAAWd,GAApBa,MACAE,EAAgCF,EAAhCE,YAAaC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SACnBC,EAAUC,MAAVD,MAERE,qBAAU,WACNR,EAAUG,GACVM,IAAMC,cAAc,WACrB,CAACP,IAEJ,IAAMQ,EAAa,WACfX,GAAU,IAaRY,EAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,wBACXb,MAAO,QACPb,gBAAiBF,EAAOa,GAAOT,sBAEnCyB,QAAS,CACL3B,gBAAiB,0BACjB4B,OAAQ,KAIhB,OACI,eAAC,IAAD,CACIC,OAAQvB,EACRwB,YA9Be,WACnBC,SAASC,KAAKC,MAAMC,UAAY,SAChCH,SAASC,KAAKC,MAAME,aAAetB,EAAQ,MA6BvCuB,aA1BgB,WACpBL,SAASC,KAAKC,MAAMC,UAAY,SAChCH,SAASC,KAAKC,MAAME,aAAe,IAyB/BE,eAAgBnB,EAChBe,MAAOd,EALX,UAOI,6BAAKnC,EAAU4B,GAAUrB,aACzB,4BAAIP,EAAU4B,GAAUpB,mBACxB,mBAAG8C,KAAK,kCAAkCC,OAAO,SAAjD,oBACA,wBAAQC,QAAS,kBAAKtB,KAAtB,SAAqClC,EAAU4B,GAAUnB,iBChE/DgD,EAAU,UACVC,GAAQ,QACRC,GAAe,eACfC,GAAY,YACZC,GAAa,a,6BCFEC,G,kDAEjBC,qBAAuB,mF,KAEvBC,IAAMC,KAAMC,OAAO,CACfC,QAASC,KAAKL,uB,KAGlBM,eAAiB,kBAAuB,EAAKL,IAAIM,IAAI,MCV5CC,GAAe,CACxBC,SAAS,EACTC,OAAO,EACPC,aAAc,GACd9C,SAAW+C,aAAaC,QAAQ,aAAe,KAC/CjD,MAAQgD,aAAaC,QAAQ,UAAY,QACzClD,aAAa,G,SCuCFmD,GAvCC,WAAkD,IAAjDrD,EAAgD,uDAAxC+C,GAAcO,EAA0B,uCAE7D,OAAQA,EAAOC,MACX,KAAKrB,GACD,OAAO,6BACAlC,GADP,IAEIiD,MAAOK,EAAOE,QAAQP,MACtBC,aAAcI,EAAOE,QAAQN,eAGrC,KAAKjB,EACD,OAAO,6BACAjC,GADP,IAEIgD,QAASM,EAAOE,UAGxB,KAAKrB,GACD,OAAO,6BACAnC,GADP,IAEII,SAAUkD,EAAOE,UAGzB,KAAKpB,GACD,OAAO,6BACApC,GADP,IAEIG,MAAOmD,EAAOE,UAGtB,KAAKnB,GACD,OAAO,6BACArC,GADP,IAEIE,aAAa,IAGrB,QACI,OAAOF,I,iBCzCJ,OAA0B,uCCA1B,OAA0B,yCCA1B,OAA0B,sCCM1ByD,eAAf,qVAGmBC,GAIAC,GAIAC,IAIbC,GACO,OADPA,GAGM,OAHNA,GAIK,OCwGIC,GAzHL,CACNC,YAAaC,IAAOC,IAAT,kOAUXC,QAASF,IAAOC,IAAT,4PAWPE,eAAgBH,IAAOI,IAAT,mFAIdC,YAAaL,IAAOI,IAAT,6EAEKP,IAEhBS,cAAeN,IAAOC,IAAT,sDAGbM,eAAgBP,IAAOC,IAAT,kGAIdO,eAAeR,IAAOC,IAAR,gOASdQ,eAAgBT,IAAOC,IAAT,8SAQF,SAAAS,GAAK,MAAsB,OAAnBA,EAAMtE,SAAoB,MAAQ,UAItDuE,cAAeX,IAAOC,IAAT,+NAKD,SAAAS,GAAK,MAAsB,OAAnBA,EAAMtE,SAAoB,OAAS,SAIvDwE,YAAYZ,IAAOC,IAAR,qMAQXY,YAAab,IAAOC,IAAT,8SAQC,SAAAS,GAAK,MAAmB,UAAhBA,EAAMvE,MAAoB,MAAQ,UAItD2E,WAAYd,IAAOC,IAAT,iOAKE,SAAAS,GAAK,MAAmB,UAAhBA,EAAMvE,MAAoB,OAAS,SAIvD4E,iBAAkBf,IAAOI,IAAT,iXAgBhBY,KAAMhB,IAAOiB,GAAT,+IC/GKC,GAAoB,WAE/B,MAA0BjF,qBAAWd,GAA9Ba,EAAP,EAAOA,MAAOmF,EAAd,EAAcA,SACP/E,EAAmBJ,EAAnBI,SAAUD,EAASH,EAATG,MAEXiF,EAAS,CACbC,UAAW,6BACXC,SAAU,4BACVC,SAAU,8BACVC,QAAS,2BACTC,UAAW,UACXC,UAAW,CAAEC,OAAQ,GAAItF,MAAO,KAGlC,OACE,cAAC,GAAE0D,YAAH,UACE,eAAC,GAAEG,QAAH,WACE,eAAC,GAAEC,eAAH,WACE,cAAC,GAAEa,KAAH,UAAQ,cAAC,IAAD,CAAMY,GAAE,IAAR,oBACR,cAAC,GAAEvB,YAAH,UAAe,cAAC,IAAD,CAAMuB,GAAE,IAAR,SAAgBpH,EAAU4B,GAAU1B,aACnD,cAAC,GAAE2F,YAAH,UAAe,cAAC,IAAD,CAAMuB,GAAE,SAAR,SAAqBpH,EAAU4B,GAAUzB,UACxD,cAAC,GAAE0F,YAAH,UAAe,cAAC,IAAD,CAAMuB,GAAE,YAAR,SAAwBpH,EAAU4B,GAAUxB,aAC3D,cAAC,GAAEyF,YAAH,UAAe,cAAC,IAAD,CAAMuB,GAAE,YAAR,SAAwBpH,EAAU4B,GAAUvB,gBAE7D,eAAC,GAAEyF,cAAH,WACE,eAAC,GAAEC,eAAH,WACE,eAAC,GAAEC,eAAH,CAAkBxC,QAAS,kBAAImD,ECfvB,SAAC/E,GAEjB,OADA+C,aAAa0C,QAAQ,WAAYzF,GAC1B,CACHmD,KAAMpB,GACNqB,QAASpD,GDWmC0F,CAAyB,OAAb1F,EAAoB,KAAM,QAA9E,UACE,cAAC,GAAEqE,eAAH,CAAkBrE,SAAUA,IAC5B,cAAC,GAAEuE,cAAH,CAAiBvE,SAAUA,EAA3B,SAAuCA,OAEzC,eAAC,GAAEwE,YAAH,CAAe5C,QAAS,kBAAImD,ECXvB,SAAChF,GAEd,OADAgD,aAAa0C,QAAQ,QAAS1F,GACvB,CACHoD,KAAMnB,GACNoB,QAASrD,GDOgC4F,CAAmB,UAAV5F,EAAoB,OAAQ,WAA1E,UACE,cAAC,GAAE0E,YAAH,CAAe1E,MAAOA,IACtB,cAAC,GAAE2E,WAAH,CAAc3E,MAAOA,EAArB,SAA8BA,UAGlC,eAAC,GAAE4E,iBAAH,WACE,cAAC,cAAD,CAAYhD,OAAO,SAASD,KAAMsD,EAAOC,UAAWW,IAAKZ,EAAOC,UAAWY,QAASb,EAAOK,UAAWhE,MAAO2D,EAAOM,YACpH,cAAC,cAAD,CAAY3D,OAAO,SAASD,KAAMsD,EAAOE,SAAUU,IAAKZ,EAAOE,SAAUW,QAASb,EAAOK,UAAWhE,MAAO2D,EAAOM,YAClH,cAAC,cAAD,CAAY3D,OAAO,SAASD,KAAMsD,EAAOG,SAAUS,IAAKZ,EAAOG,SAAUU,QAASb,EAAOK,UAAWhE,MAAO2D,EAAOM,YAClH,cAAC,cAAD,CAAY3D,OAAO,SAASD,KAAMsD,EAAOI,QAASQ,IAAKZ,EAAOI,QAASS,QAASb,EAAOK,UAAWhE,MAAO2D,EAAOM,wB,4BE/C/GQ,GAAmB,WAC5B,OACI,uCCFKC,GAAoB,WAC7B,OACI,4CCAFC,GAAQpC,IAAOqC,KAAV,yPAWPC,GAAYtC,IAAOuC,IAAV,6NAyBE,IACXrC,QAjBUF,IAAOC,IAAV,2TAQMmC,GAGAE,IAObA,aACAF,UClCSI,GAAoC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAC1CC,EAA8BD,EAA9BC,UAAWC,EAAmBF,EAAnBE,YAAaC,EAAMH,EAANG,GAE/B,OACE,cAAC,GAAE1C,QAAH,UACE,eAAC,IAAD,CAAM0B,GAAE,WAAMgB,GAAd,UACE,cAAC,GAAEN,UAAH,CAAaO,IAAKH,EAAWI,IAAI,KAC/B,cAAC,GAAEV,MAAH,UACGO,UCNE7C,GAPL,CACNI,QAASF,IAAOC,IAAT,oFCSE8C,GAAoC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAGjD,OADgB/G,qBAAWd,GAApBa,MACGiD,MACD,cAAC,GAAD,IACG+D,EAAWC,OAInB,cAAC,GAAE/C,QAAH,UACG8C,EAAWE,KAAI,SAAAT,GACd,IAAOG,EAAMH,EAANG,GACP,OACE,cAAC,GAAD,CAAkBH,QAASA,GAAcG,QAP1C,cAAC,GAAD,KCNI9C,GAVL,CACNI,QAASF,IAAOC,IAAT,mHAKPmC,MAAOpC,IAAOiB,GAAT,kCCHIkC,GAAsB,WAEjC,IACO/G,EADSH,qBAAWd,GAApBa,MACAI,SAEP,OACE,eAAC,GAAE8D,QAAH,WACE,cAAC,GAAEkC,MAAH,UAAU5H,EAAU4B,GAAUzB,QAC9B,4BAAIH,EAAU4B,GAAUtB,uBCLfgF,GANL,CACNI,QAASF,IAAOC,IAAT,oCCDEmD,GAAyB,WAEpC,OACE,cAAC,GAAElD,QAAH,UACE,gD,oBCJAA,I,OAAUF,IAAOC,IAAV,oEAIboD,GAAOrD,IAAOiB,GAAV,gGACapB,IAIjByD,GAAqBtD,IAAOC,IAAV,sIAMlBsD,GAAsBvD,IAAOC,IAAV,oEA0BJ,IACXC,WACAoD,sBACAD,QACAG,YA1BUxD,IAAOyD,EAAV,kGACM5D,IA0Bb0D,uBACAG,YAvBU1D,IAAOC,IAAV,kDAwBP0D,QArBM3D,IAAOuC,IAAV,qHAsBHqB,SAhBO5D,IAAOuC,IAAV,6ICtBKsB,GAA+B,SAAC,GAAsB,IAArBb,EAAoB,EAApBA,WAAYJ,EAAQ,EAARA,GAEjD5G,EAASC,qBAAWd,GAApBa,MAEP,OACE,cAAC,GAAEkE,QAAH,UACG8C,EAAWE,KAAI,SAAAY,GACd,GAAGA,EAAKlB,KAAOA,EAAI,CACjB,IAAOD,EAA2CmB,EAA3CnB,YAAaoB,EAA8BD,EAA9BC,YAAaxB,EAAiBuB,EAAjBvB,IAAKyB,EAAYF,EAAZE,SACtC,OACE,gCACE,cAAC,GAAEX,KAAH,UAASV,IACT,eAAC,GAAEW,mBAAH,WACE,cAAC,GAAEC,oBAAH,UACE,cAAC,KAAD,CAAcU,MAAO1B,EAAK2B,gBAAgB,MAE5C,cAAC,GAAEV,YAAH,UAAgBO,EAAY/H,EAAMI,eAEpC,cAAC,GAAEsH,YAAH,UACGM,EAASd,KAAI,SAACiB,EAAMC,GACjB,OACE,cAAC,GAAET,QAAH,CAAYd,IAAKsB,GACAC,UAZjBxB,UCfP9C,GANL,CACNI,QAASF,IAAOC,IAAT,oCCFEoE,GAAyB,WAEpC,OACE,cAAC,GAAEnE,QAAH,UACE,gDCkCSJ,GArCL,CACNI,QAASF,IAAOC,IAAT,4xBCWEqE,GAAiB,WAE5B,MAA4BrI,qBAAWd,GAAhCoJ,EAAP,EAAOA,QAASpD,EAAhB,EAAgBA,SAChB,EAAmCtF,mBAAuB,IAA1D,mBAAOmH,EAAP,KAAmBwB,EAAnB,KACMC,EAAWC,eAQjB,OANAnI,qBAAU,WACRgI,EAAQ1F,iBACP8F,MAAK,SAACC,GAAD,OAAqBJ,EAAaI,EAAIC,SAC3CC,OAAM,SAACF,GAAD,OAAezD,EhBbf,CACH5B,KAAMrB,GACNsB,QAAS,CACLP,OAAO,EACPC,agBS6B0F,UACpC,IAGD,cAAC,GAAE1E,QAAH,UACE,cAAC6E,GAAA,EAAD,CAAiBC,UAAU,mBAA3B,SACE,cAACC,GAAA,EAAD,CAEEC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7BC,WAAW,OAHb,SAKE,yBAASL,UAAU,gBAAnB,SACE,eAAC,KAAD,CAAQP,SAAUA,EAAlB,UACE,cAAC,KAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,GAAD,CAAkBvC,WAAYA,MAEhC,cAAC,KAAD,CAAOsC,OAAK,EAACC,KAAK,SAASC,UAAWrC,KACtC,cAAC,KAAD,CAAOmC,OAAK,EAACC,KAAK,YAAYC,UAAWnB,KACzC,cAAC,KAAD,CAAOiB,OAAK,EAACC,KAAK,YAAYC,UAAWpC,KACzC,cAAC,KAAD,CAAOkC,OAAK,EAACC,KAAK,OAAOE,OAAQ,YAAY,IACpC7C,EADmC,EAAT8C,MACdC,OAAZ/C,GACP,OACI,cAAC,GAAD,CAAaI,WAAYA,EAAYJ,GAAIA,aAf9C6B,EAASL,UC3BT3E,eAAf,0+CAkCqBI,IAOO,SAACa,GAAD,OAAgBA,EAAMvE,MAAMX,mBACvC,SAACkF,GAAD,OAAgBA,EAAMvE,MAAMV,aAqB5B,SAACiF,GAAD,OAAgBA,EAAMvE,MAAMV,aCvD9BqE,GATL,CACNI,QAASF,IAAOC,IAAT,4HCyCI2F,GA7BO,WAEpB,IAAMrB,EAAU,IAAIjG,GACpB,EAA0BuH,qBAAWxG,GAASN,IAA9C,mBAAO/C,EAAP,KAAcmF,EAAd,KACOhF,EAASH,EAATG,MAUP,OARAI,qBAAU,WACRgB,SAASC,KAAKC,MAAMC,UAAY,WAC/B,IAEHoI,YAAW,WACT3E,EnBUO,CACH5B,KAAMlB,OmBVT,KAGD,eAAC,IAAD,CAAelC,MAAOb,EAAOa,GAA7B,UACE,cAAC4J,GAAD,IACA,cAACC,GAAD,IACA,eAAC7K,EAAQ8K,SAAT,CAAkBC,MAAO,CAAC3B,UAASvI,QAAOmF,YAA1C,UACE,eAAC,GAAEjB,QAAH,WACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,EAAD,W,2BChCKiG,GAAb,+MACInK,MAAQ,CACJiD,OAAO,GAFf,wDAKI,WACIL,KAAKwH,SAAS,CACVnH,OAAO,MAPnB,oBAWI,WAEI,OAAIL,KAAK5C,MAAMiD,MACJ,cAAC,GAAD,IAEAL,KAAK8B,MAAM2F,aAhB9B,GAAmCjL,IAAMkL,WCAzCC,IAASd,OACP,mCACE,cAAC,GAAD,UACM,cAAC,IAAD,UACI,cAAC,GAAD,UAIXlI,SAASiJ,eAAe,W","file":"static/js/main.335c97d0.chunk.js","sourcesContent":["const Translate: {\r\n    [key: string]: {\r\n        Projects: string,\r\n        About: string,\r\n        Services: string,\r\n        Contacts: string,\r\n        AboutDescription: string\r\n        modalTitle: string,\r\n        modalDescription: string,\r\n        modalClose: string,\r\n    },\r\n} = {\r\n    en: {\r\n        Projects: 'Projects',\r\n        About: 'About',\r\n        Services: 'Services',\r\n        Contacts: 'Contacts',\r\n        AboutDescription: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Cras tincidunt viverra velit. Pellentesque ornare magna eu arcu interdum, in feugiat libero lobortis. Vivamus sed ornare eros. Mauris consectetur magna sit amet odio facilisis venenatis dapibus ac ex. Praesent quis finibus lacus, eget imperdiet tortor. Etiam sed tempus neque, non hendrerit erat. Sed ut consectetur velit. Nunc ultrices elementum nisl, pulvinar quis nulla.',\r\n        modalTitle: 'modalTitle',\r\n        modalDescription: 'um dolor sit amet, consectetur adipiscing elit. Cras tincidunt viverra velit. Pellentesque ornare magna eu arcu interdum, in feugiat libero lobortis. Vivamus sed ornare eros.',\r\n        modalClose: 'close',\r\n    },\r\n    ua: {\r\n        Projects: 'Проекти',\r\n        About: 'Про мене',\r\n        Services: 'Послуги',\r\n        Contacts: 'Контакти',\r\n        AboutDescription: 'Давно выяснено, что при оценке дизайна и композиции читаемый текст мешает сосредоточиться. Lorem Ipsum используют потому, что тот обеспечивает более или менее стандартное заполнение шаблона, а также реальное распределение букв и пробелов в абзацах, которое не получается при простой дубликации \"Здесь ваш текст.. Здесь ваш текст.. Здесь ваш текст.',\r\n        modalTitle: 'модал текст',\r\n        modalDescription: 'ено, что при оценке дизайна и композиции читаемый текст мешает сосредоточиться. Lorem Ipsum используют потому, что тот обеспечивает более или менее стандартное запо',\r\n        modalClose: 'закрити',\r\n    }\r\n};\r\n\r\nexport default Translate;","import React from \"react\";\r\nimport { initialState } from \"../reducer/initialState\";\r\n\r\ninterface IContextProps {\r\n    state: typeof  initialState;\r\n    dispatch: any;\r\n    service: any;\r\n  }\r\n\r\nexport const Context = React.createContext({} as IContextProps);","export const themes: {\r\n    [key: string]: {\r\n        backgroundColor: string,\r\n        textColor: string,\r\n        backgroundModalColor: string\r\n    }\r\n} = {\r\n    light: {\r\n        backgroundColor: '#F9F6F1',\r\n        textColor: 'black',\r\n        backgroundModalColor: 'white'\r\n    },\r\n    dark: {\r\n        backgroundColor: \"#333333\",\r\n        textColor: 'white',\r\n        backgroundModalColor: 'black'\r\n    }\r\n}","import { useContext } from \"react\";\r\nimport {useEffect, useState} from 'react';\r\nimport useScrollbarSize from 'react-scrollbar-size';\r\n\r\nimport Translate from \"../../global/Translate\";\r\nimport { Context } from \"../../Context/\";\r\nimport { themes } from \"../../global/themes\";\r\nimport Modal from 'react-modal';\r\n\r\n\r\nexport const ModalWindow: React.FC = () => {\r\n\r\n    const [modalIsOpen, setIsOpen] = useState(false);\r\n    const {state} = useContext(Context);\r\n    const {isModalOpen, theme, language} = state;\r\n    const { width } = useScrollbarSize();\r\n\r\n    useEffect(() => {\r\n        setIsOpen(isModalOpen);\r\n        Modal.setAppElement('#root');\r\n    }, [isModalOpen])\r\n\r\n    const closeModal = () => {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    const afterOpenModal = () => {\r\n        document.body.style.overflowY = 'hidden';\r\n        document.body.style.paddingRight = width + 'px';\r\n    }\r\n\r\n    const AfterCloseModal = () => {\r\n        document.body.style.overflowY = 'scroll';\r\n        document.body.style.paddingRight = '';\r\n    }\r\n\r\n    const customStyles = {\r\n        content: {\r\n            top: '50%',\r\n            left: '50%',\r\n            right: 'auto',\r\n            bottom: 'auto',\r\n            marginRight: '-50%',\r\n            transform: 'translate(-50%, -50%)',\r\n            width: '500px',\r\n            backgroundColor: themes[theme].backgroundModalColor,\r\n        },\r\n        overlay: {\r\n            backgroundColor: 'rgba(255, 255, 255, .9)',\r\n            zIndex: 99\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalIsOpen}\r\n            onAfterOpen={afterOpenModal}\r\n            onAfterClose={AfterCloseModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n        >\r\n            <h1>{Translate[language].modalTitle}</h1>\r\n            <p>{Translate[language].modalDescription}</p>\r\n            <a href='https://t.me/kryvoruchko_andrey' target='_blank'>telega</a>\r\n            <button onClick={()=> closeModal()}>{Translate[language].modalClose}</button>\r\n        </Modal>\r\n    )\r\n}\r\n","const LOADING = 'LOADING';\r\nconst ERROR = 'ERROR';\r\nconst SET_LANGUAGE = 'SET_LANGUAGE';\r\nconst SET_THEME = 'SET_THEME';\r\nconst OPEN_MODAL = 'OPEN_MODAL';\r\n\r\n\r\n\r\nexport {\r\n    LOADING,\r\n    ERROR,\r\n    SET_LANGUAGE,\r\n    SET_THEME,\r\n    OPEN_MODAL\r\n}","import axios from 'axios';\r\n\r\nexport default class Service {\r\n\r\n    _apiDataBaseProjects = 'https://raw.githubusercontent.com/User6531/db-allesandras-portfolio/main/db.json';\r\n    \r\n    api = axios.create({\r\n        baseURL: this._apiDataBaseProjects\r\n    })\r\n\r\n    getAllProjects = (): Promise<string> => this.api.get('');\r\n\r\n    // getResource = async (url: string): Promise<string> => {\r\n    //     const res = await fetch(url);\r\n    \r\n    //     if (!res.ok) {\r\n    //         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    //     }\r\n    \r\n    //     return await res.json();\r\n    // }\r\n\r\n    // getAllProjects =  async (): Promise<string> => {\r\n    //     return this.getResource(this._apiDataBaseProjects);\r\n    // }\r\n}","export const initialState = {\r\n    loading: true,\r\n    error: false,\r\n    errorMessage: '',\r\n    language: (localStorage.getItem('language') || 'en'),\r\n    theme: (localStorage.getItem('theme') || 'light'),\r\n    isModalOpen: false\r\n}","import {LOADING, ERROR, SET_LANGUAGE, SET_THEME, OPEN_MODAL} from '../reducer/actionTypes';\r\nimport {initialState} from '../reducer/initialState';\r\nimport { Action } from '../global/interface';\r\n\r\ntype State = typeof initialState;\r\n\r\nconst reducer = (state = initialState, action: Action): State => {\r\n\r\n    switch (action.type) {\r\n        case ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload.error,\r\n                errorMessage: action.payload.errorMessage\r\n            }\r\n\r\n        case LOADING:\r\n            return {\r\n                ...state,\r\n                loading: action.payload\r\n            }\r\n\r\n        case SET_LANGUAGE:\r\n            return {\r\n                ...state,\r\n                language: action.payload\r\n            }\r\n\r\n        case SET_THEME:\r\n            return {\r\n                ...state,\r\n                theme: action.payload,\r\n            }\r\n\r\n        case OPEN_MODAL:\r\n            return {\r\n                ...state,\r\n                isModalOpen: true,\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;\r\n","export default __webpack_public_path__ + \"static/media/Lato-Light.bfc37ff1.ttf\";","export default __webpack_public_path__ + \"static/media/Lato-Regular.9919edff.ttf\";","export default __webpack_public_path__ + \"static/media/Lato-Bold.5dd5aa02.ttf\";","import { createGlobalStyle } from 'styled-components';\r\n\r\nimport LatoLight from './Lato/Lato-Light.ttf';\r\nimport LatoRegular from './Lato/Lato-Regular.ttf';\r\nimport LatoBold from './Lato/Lato-Bold.ttf';\r\n\r\nexport default createGlobalStyle`\r\n    @font-face {\r\n        font-family: 'Lato-Light';\r\n        src: url(${LatoLight}) format('truetype');\r\n    }\r\n    @font-face {\r\n        font-family: 'Lato-Bold';\r\n        src: url(${LatoBold}) format('truetype');\r\n    }\r\n    @font-face {\r\n        font-family: 'Lato-Regular';\r\n        src: url(${LatoRegular}) format('truetype');\r\n    }\r\n`;\r\n\r\nconst fontSize = {\r\n    XXlarge: '36px',\r\n    large: '26px',\r\n    medium: '22px',\r\n    small: '18px',\r\n}\r\n\r\nexport {fontSize};","import styled from 'styled-components';\r\nimport { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\ninterface Props {\r\n    language?: string;\r\n    theme?: string;\r\n  }\r\n\r\nconst S = {\r\n    WrapperMain: styled.div`\r\n        height: 100%;\r\n        width: 230px;\r\n        position: fixed;\r\n        z-index: 1;\r\n        top: 0;\r\n        left: 0;\r\n        overflow-x: hidden;\r\n        text-transform: uppercase;\r\n    `,\r\n    Wrapper: styled.div`\r\n        height: 100%;\r\n        width: 150px;\r\n        margin: 0 auto;\r\n        overflow: hidden;\r\n        display: flex;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        align-content: space-between;\r\n\r\n    `,\r\n    NavigationMenu: styled.nav`\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    `,\r\n    NavMenuLink: styled.nav`\r\n       width: 100%;\r\n       font-size: ${fontSize.small};\r\n    `,\r\n    WrapperBottom: styled.div`\r\n       width: 100%;\r\n    `,\r\n    WrapperButtons: styled.div`\r\n        display: flex;\r\n        justify-content: space-between;\r\n    `,\r\n    ButtonLanguage:styled.div`\r\n        width: 50px;\r\n        height: 20px;\r\n        border: 1px solid black;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        cursor: pointer;\r\n    `,\r\n    LanguageCircle: styled.div<Props>`\r\n        transition: ease .5s all;\r\n        position: absolute;\r\n        background-color: red;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        top: 50%;\r\n        left: ${props=> props.language === 'en' ? '2px' : '30px'};\r\n        transform: translate(0, -50%);\r\n        z-index:2;\r\n    `,\r\n    LanguageTitle: styled.div<Props>`\r\n        font-size: 15px;\r\n        text-transform: lowercase;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: ${props=> props.language === 'en' ? '25px' : '5px'};\r\n        transform: translate(0, -50%);\r\n        z-index:1;\r\n    `,\r\n    ButtonTheme:styled.div`\r\n        width: 50px;\r\n        height: 20px;\r\n        border: 1px solid black;\r\n        border-radius: 10px;\r\n        position: relative;\r\n        cursor: pointer;\r\n    `,\r\n    ThemeCircle: styled.div<Props>`\r\n        transition: ease .5s all;\r\n        position: absolute;\r\n        background-color: red;\r\n        width: 15px;\r\n        height: 15px;\r\n        border-radius: 50%;\r\n        top: 50%;\r\n        left: ${props=> props.theme === 'light' ? '2px' : '30px'};\r\n        transform: translate(0, -50%);\r\n        z-index:2;\r\n    `,\r\n    ThemeTitle: styled.div<Props>`\r\n        font-size: 10px;\r\n        text-transform: lowercase;\r\n        position: absolute;\r\n        top: 50%;\r\n        left: ${props=> props.theme === 'light' ? '25px' : '5px'};\r\n        transform: translate(0, -50%);\r\n        z-index:1;  \r\n    `,\r\n    NavigationSocial: styled.nav`\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 100%;\r\n        margin: 50px 0;\r\n        transition: ease .2s all;\r\n        :hover a {\r\n            opacity: .5;\r\n        }\r\n        a {\r\n            transition: ease .2s all;\r\n            :hover {\r\n                opacity: 1;\r\n            }   \r\n        }\r\n    `,\r\n    Logo: styled.h1`\r\n        margin: 50px 0;\r\n        font-size: 50px;\r\n        a {\r\n            color: var(--black);\r\n        }\r\n    `,\r\n};\r\n\r\nexport default S;","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { SocialIcon } from 'react-social-icons';\r\n\r\nimport { Context } from \"../../Context/\";\r\nimport Translate from \"../../global/Translate\";\r\nimport {setLanguage, setTheme} from '../../reducer/action';\r\nimport S from \"./styled\";\r\n\r\nexport const SideBar: React.FC = () => {\r\n\r\n  const {state, dispatch} = useContext(Context);\r\n  const {language, theme} = state;\r\n\r\n  const social = {\r\n    instagram: 'https://www.instagram.com/',\r\n    linkedin: \"https://www.linkedin.com/\",\r\n    telegram: \"https://web.telegram.org/k/\",\r\n    behance: \"https://www.behance.net/\",\r\n    iconColor: '#CBAC97',\r\n    iconStyle: { height: 30, width: 30},\r\n  };\r\n  \r\n  return (\r\n    <S.WrapperMain>\r\n      <S.Wrapper>\r\n        <S.NavigationMenu>\r\n          <S.Logo><Link to={`/`}>Logo</Link></S.Logo>\r\n          <S.NavMenuLink><Link to={`/`}>{Translate[language].Projects}</Link></S.NavMenuLink>\r\n          <S.NavMenuLink><Link to={`/about`}>{Translate[language].About}</Link></S.NavMenuLink>\r\n          <S.NavMenuLink><Link to={`/services`}>{Translate[language].Services}</Link></S.NavMenuLink>\r\n          <S.NavMenuLink><Link to={`/contacts`}>{Translate[language].Contacts}</Link></S.NavMenuLink>\r\n        </S.NavigationMenu>\r\n        <S.WrapperBottom>\r\n          <S.WrapperButtons>\r\n            <S.ButtonLanguage onClick={()=>dispatch(setLanguage(language === 'en' ? 'ua': 'en'))}>\r\n              <S.LanguageCircle language={language} />\r\n              <S.LanguageTitle language={language} >{language}</S.LanguageTitle>\r\n            </S.ButtonLanguage>\r\n            <S.ButtonTheme onClick={()=>dispatch(setTheme(theme === 'light' ? 'dark': 'light'))}>\r\n              <S.ThemeCircle theme={theme} />\r\n              <S.ThemeTitle theme={theme} >{theme}</S.ThemeTitle>\r\n            </S.ButtonTheme>\r\n          </S.WrapperButtons>\r\n          <S.NavigationSocial >\r\n            <SocialIcon target='_blank' href={social.instagram} url={social.instagram} bgColor={social.iconColor} style={social.iconStyle}/>\r\n            <SocialIcon target='_blank' href={social.linkedin} url={social.linkedin} bgColor={social.iconColor} style={social.iconStyle}/>\r\n            <SocialIcon target='_blank' href={social.telegram} url={social.telegram} bgColor={social.iconColor} style={social.iconStyle}/>\r\n            <SocialIcon target='_blank' href={social.behance} url={social.behance} bgColor={social.iconColor} style={social.iconStyle}/>\r\n          </S.NavigationSocial>\r\n        </S.WrapperBottom>\r\n      </S.Wrapper>\r\n    </S.WrapperMain>\r\n  );\r\n}","import {LOADING, ERROR, SET_LANGUAGE, SET_THEME, OPEN_MODAL} from './actionTypes';\r\nimport { Action } from '../global/interface';\r\n\r\nconst loading = (): Action => {\r\n    return {\r\n        type : LOADING,\r\n        payload: false,\r\n    }\r\n}\r\n\r\nconst error = (errorMessage: string): Action => {\r\n    return {\r\n        type: ERROR,\r\n        payload: {\r\n            error: true,\r\n            errorMessage: errorMessage,\r\n        }\r\n    }\r\n}\r\n\r\nconst setLanguage = (language: string): Action => {\r\n    localStorage.setItem('language', language);\r\n    return {\r\n        type: SET_LANGUAGE,\r\n        payload: language\r\n    }\r\n}\r\n\r\nconst setTheme = (theme: string): Action => {\r\n    localStorage.setItem('theme', theme);\r\n    return {\r\n        type: SET_THEME,\r\n        payload: theme\r\n    }\r\n}\r\n\r\nconst setOpenModal = (): Action => {\r\n    return {\r\n        type: OPEN_MODAL\r\n    }\r\n}\r\n\r\nexport {\r\n    loading,\r\n    error,\r\n    setLanguage,\r\n    setTheme,\r\n    setOpenModal\r\n}","\r\nexport const Error : React.FC = () => {\r\n    return (\r\n        <p>error</p>\r\n    )\r\n}\r\n","\r\nexport const Loader : React.FC = () => {\r\n    return (\r\n        <p>loading...</p>\r\n    )\r\n}\r\n","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst Title = styled.span`\r\n        position: absolute;\r\n        left: 50%;\r\n        top: 50%;\r\n        transform: translate(-50%, -50%);\r\n        white-space: nowrap;\r\n        color: white;\r\n        opacity: 0;\r\n        transition: ease .3s all;\r\n`,\r\n    \r\n    ThumbNail = styled.img`\r\n        width:100%;\r\n        height:100%;\r\n        object-fit: cover;\r\n        object-position: center;\r\n        filter: grayscale(1);\r\n        opacity: 1;\r\n        transition: ease .3s all;\r\n`,\r\n    Wrapper = styled.div`\r\n        min-width: 300px;\r\n        width: 33.333%;\r\n        height: 300px;\r\n        position: relative;\r\n        overflow: hidden;\r\n        background-color: #CBAC97;\r\n\r\n        :hover ${Title} {\r\n            opacity: 1;\r\n        }\r\n        :hover ${ThumbNail} {\r\n            opacity: .2;\r\n        }\r\n`\r\n\r\nexport default {\r\n    Wrapper,\r\n    ThumbNail,\r\n    Title\r\n};","import { Link } from \"react-router-dom\";\r\nimport { resRequest } from \"../../global/interface\";\r\nimport S from \"./styled\"\r\n\r\ninterface Props {\r\n  project: resRequest;\r\n}\r\n\r\nexport const ProjectsListItem: React.FC<Props> = ({project}) => {\r\n  const {thumbnail, projectName, id} = project;\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <Link to={`/${id}`}>\r\n        <S.ThumbNail src={thumbnail} alt='' />\r\n          <S.Title>\r\n            {projectName}\r\n          </S.Title>\r\n      </Link>\r\n    </S.Wrapper>\r\n  );\r\n}","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst S = {\r\n    Wrapper: styled.div`\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    `,\r\n};\r\n\r\nexport default S;","import { Context } from \"../../../Context\";\r\nimport { useContext } from \"react\";\r\n\r\nimport {Error} from '../../Error';\r\nimport { Loader } from '../../Loader';\r\nimport { ProjectsListItem } from '../../ProjectsListItem';\r\nimport { resRequest } from \"../../../global/interface\";\r\nimport S from \"./styled\"\r\n\r\ninterface Props {\r\n  dbProjects: resRequest[];\r\n}\r\n\r\nexport const ProjectsListPage: React.FC<Props> = ({dbProjects}) => {\r\n\r\n  const {state} = useContext(Context);\r\n  if (state.error) {\r\n    return <Error />\r\n  } else if (!dbProjects.length) {\r\n    return <Loader />\r\n  } else {\r\n    return (\r\n      <S.Wrapper>\r\n        {dbProjects.map(project=> {\r\n          const {id} = project;\r\n          return (\r\n            <ProjectsListItem project={project} key={id}/>\r\n          )\r\n        })}\r\n      </S.Wrapper>\r\n    )\r\n  }\r\n}","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst S = {\r\n    Wrapper: styled.div`\r\n        width: 1000px;\r\n        text-align: center;\r\n        margin: 100px auto;\r\n    `,\r\n    Title: styled.h1`\r\n    `,\r\n};\r\n\r\nexport default S;","import { useContext } from \"react\";\r\n\r\nimport Translate from \"../../../global/Translate\";\r\nimport { Context } from \"../../../Context/\";\r\nimport S from \"./styled\"\r\n\r\nexport const AboutPage: React.FC = () => {\r\n\r\n  const {state} = useContext(Context);\r\n  const {language} = state;\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <S.Title>{Translate[language].About}</S.Title>\r\n      <p>{Translate[language].AboutDescription}</p>\r\n    </S.Wrapper>\r\n  );\r\n}","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst S = {\r\n    Wrapper: styled.div`\r\n\r\n    `,\r\n};\r\n\r\nexport default S;","import React from \"react\";\r\nimport S from \"./styled\";\r\n\r\nexport const ContactsPage: React.FC = () => {\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <p>ContactsPage</p>\r\n    </S.Wrapper>\r\n  );\r\n}","import styled from 'styled-components';\r\nimport { fontSize } from '../../../global/fonts/GlobalFonts';\r\n\r\nconst Wrapper = styled.div`\r\n    width: 80%;\r\n    margin: 0 auto;\r\n`,\r\nName = styled.h1`\r\n    font-size: ${fontSize.XXlarge};\r\n    text-align: center;\r\n    margin: 100px 0;\r\n`,\r\nDescriptionWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n`,\r\nImageGalleryWrapper = styled.div`\r\n    width: 800px;\r\n    height: 800px;\r\n`,\r\nDescription = styled.p`\r\n    font-size: ${fontSize.small};\r\n    text-align: center;\r\n    max-width: 400px; \r\n`,\r\nDrawWrapper = styled.div`\r\n    margin: 0 auto;\r\n`,\r\nDrawImg = styled.img`\r\n    display: block;\r\n    margin: 0 auto;\r\n    max-width: 800px;\r\n    cursor: pointer; \r\n`,\r\nFullDraw = styled.img`\r\n    position: fixed;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    z-index: 100;\r\n`\r\n\r\nexport default {\r\n    Wrapper,\r\n    DescriptionWrapper,\r\n    Name,\r\n    Description,\r\n    ImageGalleryWrapper,\r\n    DrawWrapper,\r\n    DrawImg,\r\n    FullDraw\r\n};","import { useContext } from \"react\";\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nimport { resRequest } from \"../../../global/interface\";\r\nimport { Context } from \"../../../Context\";\r\n\r\nimport \"./ImageGalleryStyle.css\";\r\nimport S from \"./styled\";\r\n\r\ninterface Props {\r\n  dbProjects: resRequest[];\r\n  id: string;\r\n}\r\n\r\nexport const ProjectPage: React.FC<Props> = ({dbProjects, id}) => {\r\n\r\n  const {state} = useContext(Context);\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      {dbProjects.map(item=>{\r\n        if(item.id === id) {\r\n          const {projectName, description, img, drawings} = item;\r\n          return (\r\n            <div key={id}>\r\n              <S.Name>{projectName}</S.Name>\r\n              <S.DescriptionWrapper>\r\n                <S.ImageGalleryWrapper>\r\n                  <ImageGallery items={img} showPlayButton={false}/>\r\n                </S.ImageGalleryWrapper>\r\n                <S.Description>{description[state.language]}</S.Description>\r\n              </S.DescriptionWrapper>\r\n              <S.DrawWrapper>\r\n                {drawings.map((elem, key)=> {\r\n                    return (\r\n                      <S.DrawImg  src={elem} \r\n                                  key={key}\r\n                      />\r\n                    )\r\n                })}\r\n              </S.DrawWrapper>\r\n            </div>\r\n          )\r\n        }\r\n      })}\r\n      \r\n    </S.Wrapper>\r\n  );\r\n}","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst S = {\r\n    Wrapper: styled.div`\r\n\r\n    `,\r\n};\r\n\r\nexport default S;","import S from \"./styled\"\r\n\r\nexport const ServicesPage: React.FC = () => {\r\n\r\n  return (\r\n    <S.Wrapper>\r\n      <p>ServicesPage</p>\r\n    </S.Wrapper>\r\n  );\r\n}","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst S = {\r\n    Wrapper: styled.div`\r\n        margin-left: 230px; /* Same as the width of the sidenav */\r\n        font-size: 28px; /* Increased text to enable scrolling */\r\n        width: 100%;\r\n\r\n        .fade-enter {\r\n            opacity: 0.01;\r\n        }\r\n\r\n        .fade-enter.fade-enter-active {\r\n            opacity: 1;\r\n            transition: opacity 300ms ease-in;\r\n        }\r\n\r\n        .fade-exit {\r\n            opacity: 1;\r\n        }\r\n\r\n        .fade-exit.fade-exit-active {\r\n            opacity: 0.01;\r\n            transition: opacity 300ms ease-in;\r\n        }\r\n\r\n        div.transition-group {\r\n            position: relative;\r\n        }\r\n\r\n        section.route-section {\r\n            position: absolute;\r\n            width: 100%;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n    `,\r\n};\r\n\r\nexport default S;","import { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport { useContext, useState, useEffect } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nimport { Context } from \"../../Context\";\r\nimport {ProjectsListPage} from '../pages/ProjectsListPage/';\r\nimport {AboutPage} from '../pages/AboutPage/';\r\nimport {ContactsPage} from '../pages/ContactsPage/';\r\nimport {ProjectPage} from '../pages/ProjectPage/';\r\nimport { ServicesPage } from '../pages/ServicesPage/';\r\nimport {error} from '../../reducer/action';\r\nimport { resRequest } from \"../../global/interface\";\r\n\r\nimport S from \"./styled\"\r\n\r\nexport const Main: React.FC = () => {\r\n\r\n  const {service, dispatch} = useContext(Context);\r\n  const [dbProjects, setDbProject] = useState<resRequest[]>([]);\r\n  const location = useLocation();\r\n  \r\n  useEffect(()=>{\r\n    service.getAllProjects()\r\n    .then((res: resRequest) => setDbProject(res.data))\r\n    .catch((res: string)=>dispatch(error(res)));\r\n  }, []);\r\n  \r\n  return (\r\n    <S.Wrapper>\r\n      <TransitionGroup className=\"transition-group\">\r\n        <CSSTransition\r\n          key={location.key}\r\n          timeout={{ enter: 300, exit: 300 }}\r\n          classNames=\"fade\"\r\n        >\r\n          <section className=\"route-section\">\r\n            <Switch location={location}>\r\n              <Route exact path=\"/\">\r\n                <ProjectsListPage dbProjects={dbProjects}/>\r\n              </Route>\r\n              <Route exact path=\"/about\" component={AboutPage} />\r\n              <Route exact path=\"/services\" component={ServicesPage} />\r\n              <Route exact path=\"/contacts\" component={ContactsPage} />\r\n              <Route exact path=\"/:id\" render={({match})=>{\r\n                const {id} = match.params;\r\n                return (\r\n                    <ProjectPage dbProjects={dbProjects} id={id}/>\r\n                )\r\n              }} />\r\n            </Switch>\r\n          </section>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    </S.Wrapper>\r\n  );\r\n}","import { createGlobalStyle } from 'styled-components';\r\nimport { fontSize } from './fonts/GlobalFonts';\r\n\r\n\r\nexport default createGlobalStyle`\r\n    /*Zeroing*/\r\n    * {\r\n        padding: 0;\r\n        margin: 0;\r\n        border: 0;\r\n    }\r\n    *,\r\n    *:before,\r\n    *:after {\r\n        -moz-box-sizing: border-box;\r\n        -webkit-box-sizing: border-box;\r\n        box-sizing: border-box;\r\n    }\r\n    :focus,\r\n    :active {\r\n        outline: none;\r\n    }\r\n    a:focus,\r\n    a:active {\r\n        outline: none;\r\n    }\r\n    nav,\r\n    footer,\r\n    header,\r\n    aside {\r\n        display: block;\r\n    }\r\n    html,\r\n    body {\r\n        height: 100%;\r\n        width: 100%;\r\n        font-size: 100%;\r\n        line-height: 1.5;\r\n        font-size: ${fontSize.medium};\r\n        -ms-text-size-adjust: 100%;\r\n        -moz-text-size-adjust: 100%;\r\n        -webkit-text-size-adjust: 100%;\r\n        font-family: 'Lato-Regular';\r\n        transition: ease .5s background-color, color;\r\n\r\n        background-color: ${(props: any) => props.theme.backgroundColor};\r\n        color: ${(props: any) => props.theme.textColor};\r\n    }\r\n    input,\r\n    button,\r\n    textarea,\r\n    select {\r\n        font-family: inherit;\r\n    }\r\n    input::-ms-clear {\r\n        display: none;\r\n    }\r\n    button {\r\n        cursor: pointer;\r\n    }\r\n    button::-moz-focus-inner {\r\n        padding: 0;\r\n        border: 0;\r\n    }\r\n    a,\r\n    a:visited {\r\n        text-decoration: none;\r\n        color: ${(props: any) => props.theme.textColor};\r\n    }\r\n    a:hover {\r\n        text-decoration: none;\r\n    }\r\n    ul li {\r\n        list-style: none;\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        display: block;\r\n    }\r\n    h1,h2,h3,h4,h5,h6 {\r\n        font-size: inherit;\r\n        font-weight: 400;\r\n    }\r\n`;","import styled from 'styled-components';\r\n// import { fontSize } from '../../global/fonts/GlobalFonts';\r\n\r\nconst S = {\r\n    Wrapper: styled.div`\r\n        display: flex;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 0;\r\n    `,\r\n};\r\n\r\nexport default S;","import { useReducer, useEffect } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\n\r\nimport { ModalWindow } from '../ModalWindow';\r\nimport { setOpenModal } from '../../reducer/action';\r\nimport { themes } from '../../global/themes';\r\nimport Service from '../../services/Services';\r\nimport { initialState } from '../../reducer/initialState';\r\nimport reducer from '../../reducer';\r\nimport {Context} from \"../../Context/\";\r\nimport {SideBar} from '../SideBar/';\r\nimport {Main} from '../Main/';\r\nimport GlobalFonts from '../../global/fonts/GlobalFonts';\r\nimport GlobalStyle from '../../global/GlobalStyle';\r\nimport S from \"./styled\";\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const service = new Service();\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n  const {theme} = state;\r\n\r\n  useEffect(()=>{\r\n    document.body.style.overflowY = 'scroll';\r\n  }, [])\r\n\r\n  setTimeout(() => {\r\n    dispatch(setOpenModal())\r\n  }, 30000)\r\n\r\n  return (\r\n    <ThemeProvider theme={themes[theme]}>\r\n      <GlobalFonts />\r\n      <GlobalStyle />\r\n      <Context.Provider value={{service, state, dispatch}}>\r\n        <S.Wrapper>\r\n          <SideBar />\r\n          <Main />\r\n        </S.Wrapper>\r\n        <ModalWindow />\r\n      </Context.Provider>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Error } from '../Error';\r\n\r\ntype Props = {\r\n    children: JSX.Element\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<Props> {\r\n    state = {\r\n        error: false\r\n    };\r\n\r\n    componentDidCatch() : void {\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n    \r\n    render(): JSX.Element {\r\n\r\n        if (this.state.error) {\r\n            return <Error />\r\n        } else {\r\n            return this.props.children\r\n        }\r\n    }\r\n  }","import ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport App from './components/App/';\r\nimport { ErrorBoundary } from './components/ErrorBoundary';\r\n\r\n\r\nReactDOM.render(\r\n  <>\r\n    <ErrorBoundary>\r\n          <Router>\r\n              <App/>\r\n          </Router>\r\n    </ErrorBoundary>\r\n  </>\r\n  ,document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}